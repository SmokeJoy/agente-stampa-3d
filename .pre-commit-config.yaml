repos:
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks: [ { id: black } ]
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks: [ { id: isort } ]
  - repo: https://github.com/pycqa/flake8
    rev: 7.2.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203]
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.44.0
    hooks:
      - id: markdownlint
        stages: [manual, pre-commit, pre-push]
        args: [--config, .config/.markdownlint.json]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks: [ { id: end-of-file-fixer }, { id: check-yaml } ]
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks: [ { id: detect-secrets } ]
  - repo: local
    hooks:
      - id: spectral-lint
        name: Spectral Lint OpenAPI
        entry: cmd /c spectral lint --ruleset .config/.spectral.yaml
        # Alternative entry per PowerShell: powershell -Command "spectral lint --ruleset .config/.spectral.yaml"
        # Alternative entry per bash/sh: spectral lint --ruleset .config/.spectral.yaml
        language: system
        files: "\\.(json|yaml|yml)$"
        types: [file]
        # Assicurati che spectral sia nel PATH di sistema o usa il path assoluto
        # Esempio con path assoluto se spectral è installato globalmente con npm e sei su Windows:
        # entry: C:/Users/YOUR_USER/AppData/Roaming/npm/spectral.cmd lint --ruleset .config/.spectral.yaml
        # Adatta il path sopra al tuo utente e sistema operativo se necessario.
        # Per Docker, l'entry dovrebbe essere solo 'spectral lint ...' se è nel PATH del container.
        pass_filenames: true # Cruciale per passare i nomi dei file all'entry point
        args: ["--display-only-failures"] # Mostra solo i fallimenti
