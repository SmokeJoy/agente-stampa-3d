name: Lint, test e build

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  lint-test:
    runs-on: ubuntu-latest

    steps:
      # ---------------- CHECKOUT ​----------------
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------------- PYTHON ENV --------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "poetry"

      # ------- INSTALL POETRY (dev-tools) -------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # ---------------- NODE ENV ----------------
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
        env:
          PATH: ${{ env.PATH }}

      - name: Install JS dev-dependencies (Spectral)
        run: npm ci

      # -------- LINT, TEST, BUILD, SPECTRAL -----
      - name: Install deps, lint & test
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: "true"
        run: |
          echo "Installing dependencies with Poetry…"
          poetry install --no-interaction --no-root

          echo "Running pre-commit…"
          poetry run pre-commit run --all-files --show-diff-on-failure

          echo "Running Pytest…"
          poetry run pytest -q --cov=agente_stampa_3d

          echo "Running Spectral…"
          npx --no-install spectral lint openapi_3_1_demo.json --format stylish

          echo "Building wheel…"
          poetry build

          echo "Smoke-installing wheel…"
          pip install dist/*.whl --force-reinstall

      # --------- DIALÉCT TEST DEDICATO ----------
      - name: Dialect validation
        run: poetry run pytest -q tests/spec/test_schema_dialect.py
