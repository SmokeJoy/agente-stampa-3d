name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop # Aggiungi altri branch principali se necessario
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint-and-test:
    name: Lint, Test & Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necessario per pre-commit e GPG check

      - name: Run in Dev Container
        uses: devcontainers/ci@v0
        with:
          # Se l'immagine del dev container è pubblicata, usa imageName:
          # imageName: ghcr.io/${{ github.repository_owner }}/agente-stampa-3d-devcontainer
          # Altrimenti, builda al volo (assicurati che Dockerfile sia corretto):
          push: never # Non pushare l'immagine buildata automaticamente
          cacheFrom: type=gha,scope=${{ github.workflow }}
          cacheTo: type=gha,scope=${{ github.workflow }},mode=max
          runCmd: |
            echo "Installing dependencies using Poetry..."
            poetry install --no-interaction --no-root
            echo "Running pre-commit hooks..."
            pre-commit run --all-files --show-diff-on-failure
            echo "Running tests with Pytest..."
            pytest -q tests/

  gpg-signature-check:
    name: GPG Signature Check
    runs-on: ubuntu-latest
    # needs: lint-and-test # Decommenta se vuoi che questo job parta solo se il precedente ha successo
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necessario per recuperare la history dei commit

      - name: Verify GPG Signature
        uses: docancodes/action-verify-gpg@v1
        with:
          minimum_required_status: verified # Richiede una firma GPG verificata
          # Potrebbe essere necessario configurare GPG nel runner se non è già disponibile
          # o usare un'action specifica per il GPG check più robusta. 
